[
    {
        "description": "Given a two-dimensional array, find the maximum element.",
        "examples": [
            {
                "input": "[[1, 2, 3], [4, 5, 6], [7, 8, 9]]",
                "output": "9",
                "description": "The maximum element in the array is 9."
            },
            {
                "input": "[[10, 20, 30], [40, 50, 60], [70, 80, 90]]",
                "output": "90",
                "description": "The maximum element in the array is 90."
            },
            {
                "input": "[[-1, -2, -3], [-4, -5, -6], [-7, -8, -9]]",
                "output": "-1",
                "description": "The maximum element in the array is -1."
            }
        ],
        "constraints": "The array can have any number of rows and columns. The values of the array elements can be positive, negative, or zero. The maximum element in the array will be within the range of 32-bit signed integer."
    },
    {
        "description": "Given a matrix, calculate its transpose. The transpose of a matrix flips the matrix over its main diagonal, switching the row and column indices.",
        "examples": [
            {
                "input": "[[1, 2, 3], [4, 5, 6], [7, 8, 9]]",
                "output": "[[1, 4, 7], [2, 5, 8], [3, 6, 9]]",
                "description": "The transpose of the given matrix is [[1, 4, 7], [2, 5, 8], [3, 6, 9]]."
            },
            {
                "input": "[[10, 20], [30, 40], [50, 60]]",
                "output": "[[10, 30, 50], [20, 40, 60]]",
                "description": "The transpose of the given matrix is [[10, 30, 50], [20, 40, 60]]."
            },
            {
                "input": "[[1]]",
                "output": "[[1]]",
                "description": "The transpose of the given matrix is [[1]]."
            }
        ],
        "constraints": "The matrix can have any number of rows and columns. The values of the matrix elements can be positive, negative, or zero. The dimensions of the matrix will be such that it can be transposed without any issues."
    },
    {
        "description": "Given a jagged array, sort its elements in ascending order.",
        "examples": [
            {
                "input": "[[3, 2, 1], [6, 5, 4], [9, 8, 7]]",
                "output": "[[1, 2, 3], [4, 5, 6], [7, 8, 9]]",
                "description": "The sorted jagged array is [[1, 2, 3], [4, 5, 6], [7, 8, 9]]."
            },
            {
                "input": "[[9, 8, 7], [6, 5, 4], [3, 2, 1]]",
                "output": "[[1, 2, 3], [4, 5, 6], [7, 8, 9]]",
                "description": "The sorted jagged array is [[1, 2, 3], [4, 5, 6], [7, 8, 9]]."
            },
            {
                "input": "[[5, 4], [3, 2, 1], [9, 8, 7, 6]]",
                "output": "[[1, 2, 3, 4, 5], [6, 7, 8], [9]]",
                "description": "The sorted jagged array is [[1, 2, 3, 4, 5], [6, 7, 8], [9]]."
            }
        ],
        "constraints": "The jagged array can have any number of subarrays. Each subarray can have any number of elements. The elements of the jagged array will be integers within the range of 32-bit signed integer."
    },
    {
        "description": "Given a jagged array, calculate the sum of all elements.",
        "examples": [
            {
                "input": "[[1, 2, 3], [4, 5, 6], [7, 8, 9]]",
                "output": "45",
                "description": "The sum of all elements in the jagged array is 45."
            },
            {
                "input": "[[10, 20], [30, 40, 50], [60, 70, 80, 90]]",
                "output": "450",
                "description": "The sum of all elements in the jagged array is 450."
            },
            {
                "input": "[[5, 10, 15], [], [20, 25, 30, 35], [40]]",
                "output": "220",
                "description": "The sum of all elements in the jagged array is 220."
            }
        ],
        "constraints": "The jagged array can have any number of subarrays. Each subarray can have any number of elements. The elements of the jagged array will be integers within the range of 32-bit signed integer."
    },
    {
        "description": "Given a jagged array, sort its rows in ascending order based on the sum of their elements.",
        "examples": [
            {
                "input": "[[3, 2, 1], [6, 5, 4], [9, 8, 7]]",
                "output": "[[1, 2, 3], [4, 5, 6], [7, 8, 9]]",
                "description": "The sorted jagged array is [[1, 2, 3], [4, 5, 6], [7, 8, 9]]."
            },
            {
                "input": "[[9, 8, 7], [6, 5, 4], [3, 2, 1]]",
                "output": "[[3, 2, 1], [6, 5, 4], [9, 8, 7]]",
                "description": "The sorted jagged array is [[3, 2, 1], [6, 5, 4], [9, 8, 7]]."
            },
            {
                "input": "[[5, 4], [3, 2, 1], [9, 8, 7, 6]]",
                "output": "[[3, 2, 1], [5, 4], [9, 8, 7, 6]]",
                "description": "The sorted jagged array is [[3, 2, 1], [5, 4], [9, 8, 7, 6]]."
            }
        ],
        "constraints": "The jagged array can have any number of subarrays. Each subarray can have any number of elements. The elements of the jagged array will be integers within the range of 32-bit signed integer."
    },
    {
        "description": "Given a multi-dimensional array, convert it into a jagged array.",
        "examples": [
            {
                "input": "[[1, 2, 3], [4, 5], [6, 7, 8, 9]]",
                "output": "[[1, 2, 3], [4, 5], [6, 7, 8, 9]]",
                "description": "The jagged array is [[1, 2, 3], [4, 5], [6, 7, 8, 9]]."
            },
            {
                "input": "[[10], [20, 30], [40, 50, 60], [70]]",
                "output": "[[10], [20, 30], [40, 50, 60], [70]]",
                "description": "The jagged array is [[10], [20, 30], [40, 50, 60], [70]]."
            },
            {
                "input": "[[1, 2], [3], [4, 5, 6], [7, 8], [9]]",
                "output": "[[1, 2], [3], [4, 5, 6], [7, 8], [9]]",
                "description": "The jagged array is [[1, 2], [3], [4, 5, 6], [7, 8], [9]]."
            }
        ],
        "constraints": "The multi-dimensional array can have any number of dimensions. Each dimension can have any number of elements. The elements of the multi-dimensional array will be integers within the range of 32-bit signed integer."
    },
    {
        "description": "Given a multi-dimensional array, reshape it into a new shape without changing its data.",
        "examples": [
            {
                "input": "[[1, 2, 3], [4, 5, 6], [7, 8, 9]], new shape = (3, 3)",
                "output": "[[1, 2, 3], [4, 5, 6], [7, 8, 9]]",
                "description": "The reshaped array is [[1, 2, 3], [4, 5, 6], [7, 8, 9]]."
            },
            {
                "input": "[[1, 2, 3], [4, 5, 6]], new shape = (6, 1)",
                "output": "[[1], [2], [3], [4], [5], [6]]",
                "description": "The reshaped array is [[1], [2], [3], [4], [5], [6]]."
            },
            {
                "input": "[[1, 2], [3, 4], [5, 6]], new shape = (2, 3)",
                "output": "[[1, 2, 3], [4, 5, 6]]",
                "description": "The reshaped array is [[1, 2, 3], [4, 5, 6]]."
            }
        ],
        "constraints": "The multi-dimensional array can have any number of dimensions. Each dimension can have any number of elements. The elements of the multi-dimensional array will be integers within the range of 32-bit signed integer. The new shape must be compatible with the original array, i.e., the total number of elements must remain the same."
    },
    {
        "description": "Given an integer N, generate a spiral matrix of size N x N.",
        "examples": [
            {
                "input": "N = 3",
                "output": "[[1, 2, 3], [8, 9, 4], [7, 6, 5]]",
                "description": "The spiral matrix of size 3 x 3 is [[1, 2, 3], [8, 9, 4], [7, 6, 5]]."
            },
            {
                "input": "N = 4",
                "output": "[[1, 2, 3, 4], [12, 13, 14, 5], [11, 16, 15, 6], [10, 9, 8, 7]]",
                "description": "The spiral matrix of size 4 x 4 is [[1, 2, 3, 4], [12, 13, 14, 5], [11, 16, 15, 6], [10, 9, 8, 7]]."
            },
            {
                "input": "N = 5",
                "output": "[[1, 2, 3, 4, 5], [16, 17, 18, 19, 6], [15, 24, 25, 20, 7], [14, 23, 22, 21, 8], [13, 12, 11, 10, 9]]",
                "description": "The spiral matrix of size 5 x 5 is [[1, 2, 3, 4, 5], [16, 17, 18, 19, 6], [15, 24, 25, 20, 7], [14, 23, 22, 21, 8], [13, 12, 11, 10, 9]]."
            }
        ],
        "constraints": "The integer N will be a positive integer."
    },
    {
        "description": "Given a jagged array, transpose it by interchanging its rows and columns.",
        "examples": [
            {
                "input": "[[1, 2, 3], [4, 5], [6, 7, 8, 9]]",
                "output": "[[1, 4, 6], [2, 5, 7], [3, null, 8], [null, null, 9]]",
                "description": "The transposed jagged array is [[1, 4, 6], [2, 5, 7], [3, null, 8], [null, null, 9]]."
            },
            {
                "input": "[[10], [20, 30], [40, 50, 60], [70]]",
                "output": "[[10, 20, 40, 70], [null, 30, 50, null], [null, null, 60, null]]",
                "description": "The transposed jagged array is [[10, 20, 40, 70], [null, 30, 50, null], [null, null, 60, null]]."
            },
            {
                "input": "[[1, 2], [3], [4, 5, 6], [7, 8], [9]]",
                "output": "[[1, 3, 4, 7, 9], [2, null, 5, 8, null], [null, null, 6, null, null]]",
                "description": "The transposed jagged array is [[1, 3, 4, 7, 9], [2, null, 5, 8, null], [null, null, 6, null, null]]."
            }
        ],
        "constraints": "The jagged array can have any number of rows. Each row can have any number of elements. The elements of the jagged array will be integers within the range of 32-bit signed integer."
    },
    {
        "description": "Given a jagged array and a target element, search for the element and return its indices if found, otherwise return [-1, -1].",
        "examples": [
            {
                "input": "[[1, 2, 3], [4, 5], [6, 7, 8, 9]], target = 5",
                "output": "[1, 1]",
                "description": "The target element 5 is found at indices [1, 1]."
            },
            {
                "input": "[[10], [20, 30], [40, 50, 60], [70]], target = 70",
                "output": "[3, 0]",
                "description": "The target element 70 is found at indices [3, 0]."
            },
            {
                "input": "[[1, 2], [3], [4, 5, 6], [7, 8], [9]], target = 10",
                "output": "[-1, -1]",
                "description": "The target element 10 is not found, so [-1, -1] is returned."
            }
        ],
        "constraints": "The jagged array can have any number of rows. Each row can have any number of elements. The elements of the jagged array will be integers within the range of 32-bit signed integer. The target element will be an integer within the range of 32-bit signed integer."
    },
    {
        "description": "Given a chain of matrices, calculate the minimum number of scalar multiplications required to multiply them.",
        "examples": [
            {
                "input": "[A, B, C]",
                "output": "90",
                "description": "Multiplying matrices A, B, and C requires 90 scalar multiplications."
            },
            {
                "input": "[X, Y, Z, W]",
                "output": "180",
                "description": "Multiplying matrices X, Y, Z, and W requires 180 scalar multiplications."
            },
            {
                "input": "[M, N]",
                "output": "0",
                "description": "Multiplying matrices M and N requires 0 scalar multiplications as they can be directly multiplied."
            }
        ],
        "constraints": "The chain of matrices can have any number of matrices. Each matrix will have valid dimensions for matrix multiplication."
    },
    {
        "description": "Given a one-dimensional array, find the maximum sum of a subarray.",
        "examples": [
            {
                "input": "[-2, 1, -3, 4, -1, 2, 1, -5, 4]",
                "output": "6",
                "description": "The maximum sum of a subarray is 6 (from index 3 to index 6)."
            },
            {
                "input": "[1, -2, 3, -4, 5, -6, 7, -8, 9]",
                "output": "9",
                "description": "The maximum sum of a subarray is 9 (from index 8 to index 8)."
            },
            {
                "input": "[-1, -2, -3, -4, -5]",
                "output": "-1",
                "description": "The maximum sum of a subarray is -1 (single element with the highest value)."
            }
        ],
        "constraints": "The input array can have any number of elements. The array may contain both positive and negative integers."
    },
    {
        "description": "Find the maximum value in a 2D array of integers, considering only the elements that form a square or rectangle. The square/rectangle can have any size and must be aligned with the rows and columns.",
        "examples": [
            {
                "input": "[[1, 2, 3], [4, 5, 6], [7, 8, 9]]",
                "output": "9",
                "description": "The maximum value within any square or rectangle is 9."
            },
            {
                "input": "[[10, 20], [30, 40], [50, 60]]",
                "output": "60",
                "description": "The maximum value within any square or rectangle is 60."
            },
            {
                "input": "[[5]]",
                "output": "5",
                "description": "The maximum value within any square or rectangle is 5 (single-element array)."
            }
        ],
        "constraints": "The 2D array can have any number of rows and columns. The elements of the array will be integers within the range of a 32-bit signed integer."
    },
    {
        "description": "Given a jagged array of integers, sort the array in ascending order based on the sum of each row. If two rows have the same sum, maintain their relative order.",
        "examples": [
            {
                "input": "[[4, 5], [1, 2, 3], [7, 8, 9], [6]]",
                "output": "[[6], [1, 2, 3], [4, 5], [7, 8, 9]]",
                "description": "The rows are sorted based on their sums: [6], [1, 2, 3], [4, 5], [7, 8, 9]."
            },
            {
                "input": "[[10], [2, 3], [5, 4], [6, 7, 8]]",
                "output": "[[10], [2, 3], [5, 4], [6, 7, 8]]",
                "description": "The rows are already in ascending order based on their sums."
            },
            {
                "input": "[[1, 2, 3], [4], [5, 6], [7, 8, 9]]",
                "output": "[[4], [1, 2, 3], [5, 6], [7, 8, 9]]",
                "description": "The rows are sorted based on their sums: [4], [1, 2, 3], [5, 6], [7, 8, 9]."
            }
        ],
        "constraints": "The jagged array can have any number of rows. Each row can have any number of elements. The elements of the array will be integers within the range of a 32-bit signed integer."
    },
    {
        "description": "Given a 2D array of integers, find the subarray with the maximum sum. The subarray should have a rectangular shape.",
        "examples": [
            {
                "input": "[[1, 2, -1, -4, -20], [-8, -3, 4, 2, 1], [3, 8, 10, 1, 3], [-4, -1, 1, 7, -6]]",
                "output": "[[3, 8, 10], [-4, -1, 1], [7, -6]]",
                "description": "The subarray with the maximum sum is [[3, 8, 10], [-4, -1, 1], [7, -6]]."
            },
            {
                "input": "[[-2, -3, 4, -1, -2, 1, 5, -3], [1, -2, -3, 0, 7, -8, -2], [1, 5, 3, -4, -2, -1, 2, 8]]",
                "output": "[[4, -1, -2, 1, 5]]",
                "description": "The subarray with the maximum sum is [[4, -1, -2, 1, 5]]."
            },
            {
                "input": "[[1]]",
                "output": "[[1]]",
                "description": "The input array itself is the subarray with the maximum sum."
            }
        ],
        "constraints": "The 2D array can have any number of rows and columns. The elements of the array will be integers within the range of a 32-bit signed integer."
    },
    {
        "description": "Given a square 2D array of integers, rotate it 90 degrees clockwise in place, without using additional space.",
        "examples": [
            {
                "input": "[[1, 2, 3], [4, 5, 6], [7, 8, 9]]",
                "output": "[[7, 4, 1], [8, 5, 2], [9, 6, 3]]",
                "description": "The array is rotated 90 degrees clockwise."
            },
            {
                "input": "[[1, 2], [3, 4]]",
                "output": "[[3, 1], [4, 2]]",
                "description": "The array is rotated 90 degrees clockwise."
            },
            {
                "input": "[[5]]",
                "output": "[[5]]",
                "description": "The array is a single-element, so no rotation is needed."
            }
        ],
        "constraints": "The input array will be a square matrix with dimensions between 1 and 1000. The elements of the array will be integers within the range of a 32-bit signed integer."
    },
    {
        "description": "Given a jagged array of integers, find the row with the highest sum of elements. If multiple rows have the same sum, return the index of the first occurrence.",
        "examples": [
            {
                "input": "[[1, 2, 3], [4, 5, 6], [7, 8, 9]]",
                "output": "2",
                "description": "The row with the highest sum is [7, 8, 9] at index 2."
            },
            {
                "input": "[[10], [20, 30], [40, 50, 60], [70]]",
                "output": "2",
                "description": "The row with the highest sum is [40, 50, 60] at index 2."
            },
            {
                "input": "[[1, 2], [3], [4, 5, 6], [7, 8], [9]]",
                "output": "2",
                "description": "The row with the highest sum is [4, 5, 6] at index 2."
            }
        ],
        "constraints": "The jagged array can have any number of rows. Each row can have any number of elements. The elements of the array will be integers within the range of a 32-bit signed integer."
    },
    {
        "description": "Given a 2D array of characters, count the number of occurrences of a specific character in the array.",
        "examples": [
            {
                "input": "[['a', 'b', 'c'], ['d', 'a', 'e'], ['f', 'a', 'g']]",
                "output": "3",
                "description": "The character 'a' occurs 3 times in the array."
            },
            {
                "input": "[['x', 'y', 'z'], ['x', 'x', 'y'], ['y', 'z', 'x']]",
                "output": "4",
                "description": "The character 'x' occurs 4 times in the array."
            },
            {
                "input": "[['a', 'b'], ['c', 'd']]",
                "output": "0",
                "description": "The character 'z' does not occur in the array."
            }
        ],
        "constraints": "The 2D array can have any number of rows and columns. The elements of the array will be characters."
    }
]